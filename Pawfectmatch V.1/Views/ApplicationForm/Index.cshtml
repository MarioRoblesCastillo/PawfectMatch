@model Pawfectmatch_V._1.Models.AdoptionApplication
@{
    ViewData["Title"] = "Application Form";
    var pets = ViewBag.AvailablePets as List<Pawfectmatch_V._1.Models.Pet> ?? new List<Pawfectmatch_V._1.Models.Pet>();
}

<head>
    <link href="https://fonts.googleapis.com/css2?family=Fredoka:wght@500;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <style>
        body, .container, .card, .form-label, .form-control, .btn {
            font-family: 'Fredoka', Arial, sans-serif;
        }
        h2, h5.fw-bold {
            color: #ff5757;
            letter-spacing: 1px;
        }
        .wizard-step {
            display: none;
            opacity: 0;
            transition: opacity 0.4s;
        }
        .wizard-step.active {
            display: block;
            opacity: 1;
            animation: fadeIn 0.4s;
        }
        keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: none; }
        }
        .stepper {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            background: #fffbe6;
            border-radius: 24px;
            padding: 1rem 2rem;
            box-shadow: 0 2px 8px #ffb34733;
            position: relative;
            overflow: hidden;
        }
        .step {
            flex: 1;
            text-align: center;
            position: relative;
        }
        .step .circle {
            width: 38px;
            height: 38px;
            border-radius: 50%;
            background: #ffb347;
            color: #fff;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            font-size: 1.3rem;
            font-weight: 700;
            margin-bottom: 0.3rem;
            border: 3px solid #fff;
            box-shadow: 0 2px 8px #ffb34733;
            transition: background 0.2s, transform 0.2s;
        }
        .step.active .circle {
            transform: scale(1.15);
            box-shadow: 0 0 0 4px #ffb34744;
        }
        .step.completed .circle {
            animation: pop 0.3s;
        }
        keyframes pop {
            0% { transform: scale(1); }
            50% { transform: scale(1.2); }
            100% { transform: scale(1); }
        }
        .step-label {
            font-size: 1rem;
            color: #ff5757;
            font-weight: 600;
        }
        .step:not(:last-child)::after {
            content: '';
            position: absolute;
            top: 19px;
            left: 50%;
            width: 100%;
            height: 4px;
            background: #ffb347;
            z-index: 0;
            transform: translateX(50%);
        }
        .step.completed:not(:last-child)::after {
            background: #ff5757;
        }
        .btn-pawfect {
            background: linear-gradient(90deg, #ffb347 0%, #ff5757 100%);
            color: #fff;
            font-weight: 700;
            border: none;
            border-radius: 24px;
            padding: 0.75rem 2.5rem;
            box-shadow: 0 2px 8px #ffb34744;
        }
        .btn-pawfect:hover {
            background: linear-gradient(90deg, #ff5757 0%, #ffb347 100%);
            color: #fff;
        }
        .form-label {
            color: #ff5757;
            font-weight: 600;
        }
        .section-icon {
            color: #ffb347;
            font-size: 1.5rem;
            vertical-align: middle;
            margin-right: 0.5rem;
        }
        .border-bottom {
            border-color: #ffb347 !important;
        }
        .form-check-input:checked {
            background-color: #ff5757;
            border-color: #ffb347;
        }
        .is-invalid {
            border-color: #ff5757 !important;
            box-shadow: 0 0 0 2px #ff575755;
            animation: shake 0.2s;
        }
        keyframes shake {
            0% { transform: translateX(0); }
            25% { transform: translateX(-4px); }
            50% { transform: translateX(4px); }
            75% { transform: translateX(-4px); }
            100% { transform: translateX(0); }
        }
        .error-summary {
            background: #fff0f0;
            color: #ff5757;
            border-left: 5px solid #ff5757;
            padding: 1rem;
            border-radius: 8px;
            margin-bottom: 1rem;
            font-weight: 600;
        }
        .form-label[title] {
            cursor: help;
            border-bottom: 1px dotted #ffb347;
        }
        .skip-link {
            position: absolute;
            left: -999px;
            top: auto;
            width: 1px;
            height: 1px;
            overflow: hidden;
            z-index: 10000;
            background: #ffb347;
            color: #fff;
            padding: 0.5rem 1.5rem;
            border-radius: 8px;
            font-weight: bold;
        }
        .skip-link:focus {
            left: 1rem;
            top: 1rem;
            width: auto;
            height: auto;
            outline: 3px solid #ff5757;
            box-shadow: 0 0 0 4px #fffbe6;
        }
        .circle:focus {
            outline: 3px solid #ff5757;
            box-shadow: 0 0 0 4px #ffb34744;
        }
        .btn:focus, .form-control:focus, .form-check-input:focus {
            outline: 2px solid #ff5757 !important;
            box-shadow: 0 0 0 3px #ffb34755 !important;
        }
    </style>
</head>

<h2 class="mb-4">Adoption Application Wizard</h2>

@* Toast notification for feedback *@
<partial name="~/Views/Shared/_ToastNotifications.cshtml" />
@if (TempData["DebugInfo"] != null)
{
    <div class="alert alert-info mt-2">@TempData["DebugInfo"]</div>
}

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger mt-2">
        <strong>Debug:</strong> ModelState is invalid.<br />
        PetId: @Model?.PetId <br />
        <ul>
        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
        {
            <li>@error.ErrorMessage</li>
        }
        </ul>
    </div>
}

@if (Model?.PetId > 0 || (ViewBag.SelectedPet != null))
{
    <input type="hidden" name="PetId" value="@(Model?.PetId > 0 ? Model.PetId : (ViewBag.SelectedPet != null ? ((Pawfectmatch_V._1.Models.Pet)ViewBag.SelectedPet).Id : 0))" />
}

<a href="#mainContent" class="visually-hidden-focusable skip-link">Skip to main content</a>

<div class="stepper mb-4" role="list" aria-label="Application Steps">
    <div class="step" id="step-1" role="listitem" aria-current="step">
        <div class="circle" tabindex="0" aria-label="Step 1: Personal Info"><i class="bi bi-person-fill"></i></div>
        <div class="step-label">Personal Info</div>
    </div>
    <div class="step" id="step-2" role="listitem">
        <div class="circle" tabindex="0" aria-label="Step 2: Home Info"><i class="bi bi-house-fill"></i></div>
        <div class="step-label">Home Info</div>
    </div>
    <div class="step" id="step-3" role="listitem">
        <div class="circle" tabindex="0" aria-label="Step 3: Pet Experience"><i class="bi bi-emoji-smile"></i></div>
        <div class="step-label">Pet Experience</div>
    </div>
    <div class="step" id="step-4" role="listitem">
        <div class="circle" tabindex="0" aria-label="Step 4: Commitment"><i class="bi bi-emoji-smile"></i></div>
        <div class="step-label">Commitment</div>
    </div>
    <div class="step" id="step-5" role="listitem">
        <div class="circle" tabindex="0" aria-label="Step 5: Review"><i class="bi bi-clipboard-check"></i></div>
        <div class="step-label">Review</div>
    </div>
</div>

<main id="mainContent" tabindex="-1">
<form asp-action="Index" method="post" class="needs-validation" novalidate role="form" id="wizardForm">
    <div id="wizardErrorSummary" class="error-summary" style="display:none;" role="alert" aria-live="assertive"></div>
    <!-- Step 1: Personal Info -->
    <div class="wizard-step active" data-step="0">
        <h5 class="fw-bold mb-3"><i class="bi bi-person-fill section-icon"></i>Personal Information</h5>
    <div class="row mb-3">
            <div class="col-md-8">
                <label asp-for="ApplicantName" class="form-label">Full Name</label>
                <input asp-for="ApplicantName" class="form-control border-bottom border-2" style="border-radius:0;" required />
                <span asp-validation-for="ApplicantName" class="text-danger"></span>
            </div>
            <div class="col-md-4">
                <label class="form-label">Age</label>
                <input type="number" class="form-control border-bottom border-2" style="border-radius:0;" name="Age" min="0" required />
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-md-6">
                <label class="form-label">Gender</label><br />
            <div class="form-check form-check-inline">
                    <input class="form-check-input" type="radio" name="Gender" id="GenderMale" value="Male" required />
                <label class="form-check-label" for="GenderMale">Male</label>
            </div>
            <div class="form-check form-check-inline">
                    <input class="form-check-input" type="radio" name="Gender" id="GenderFemale" value="Female" />
                <label class="form-check-label" for="GenderFemale">Female</label>
            </div>
            <div class="form-check form-check-inline">
                    <input class="form-check-input" type="radio" name="Gender" id="GenderOther" value="Other" />
                <label class="form-check-label" for="GenderOther">Other</label>
                </div>
            </div>
            <div class="col-md-6">
                <label asp-for="Phone" class="form-label">Phone Number</label>
                <input asp-for="Phone" class="form-control border-bottom border-2" style="border-radius:0;" required />
                <span asp-validation-for="Phone" class="text-danger"></span>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-md-6">
                <label asp-for="Email" class="form-label">Email Address</label>
                <input asp-for="Email" class="form-control border-bottom border-2" style="border-radius:0;" required />
                <span asp-validation-for="Email" class="text-danger"></span>
    </div>
            <div class="col-md-6">
                <label asp-for="Address" class="form-label">Address</label>
                <input asp-for="Address" class="form-control border-bottom border-2" style="border-radius:0;" required />
                <span asp-validation-for="Address" class="text-danger"></span>
    </div>
    </div>
    </div>
    <!-- Step 2: Home Info -->
    <div class="wizard-step" data-step="1">
        <h5 class="fw-bold mb-3"><i class="bi bi-house-fill section-icon"></i>Home Information</h5>
    <div class="mb-3">
            <label class="form-label">Type of Residence:</label>
        <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" asp-for="ResidenceType" value="House" required />
                <label class="form-check-label">House</label>
        </div>
        <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" asp-for="ResidenceType" value="Apartment" />
                <label class="form-check-label">Apartment</label>
        </div>
        <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" asp-for="ResidenceType" value="Condo" />
                <label class="form-check-label">Condo</label>
        </div>
        <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" asp-for="ResidenceType" value="Other" />
                <label class="form-check-label">Other</label>
                <input type="text" class="form-control d-inline-block ms-2" style="width: 150px; border-bottom:1px solid #ccc; border-radius:0;" name="OtherResidenceText" placeholder="Specify" />
            </div>
            <span asp-validation-for="ResidenceType" class="text-danger"></span>
    </div>
    <div class="mb-3">
            <label class="form-label">Do you own or rent your home?</label>
        <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" asp-for="OwnOrRent" value="Own" required />
                <label class="form-check-label">Own</label>
        </div>
        <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" asp-for="OwnOrRent" value="Rent" />
                <label class="form-check-label">Rent</label>
            </div>
            <span asp-validation-for="OwnOrRent" class="text-danger"></span>
        </div>
        <div class="mb-3" id="landlordQuestion" style="display:none;">
            <label class="form-label">If renting, does your landlord allow pets?</label>
        <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" asp-for="LandlordAllowsPets" value="Yes" />
                <label class="form-check-label">Yes</label>
        </div>
        <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" asp-for="LandlordAllowsPets" value="No" />
                <label class="form-check-label">No</label>
        </div>
        <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" asp-for="LandlordAllowsPets" value="Not sure" />
                <label class="form-check-label">Not sure</label>
            </div>
            <span asp-validation-for="LandlordAllowsPets" class="text-danger"></span>
    </div>
    <div class="mb-3">
            <label class="form-label">Do you have a secure yard or space for the pet?</label>
        <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" asp-for="SecureYard" value="Yes" required />
                <label class="form-check-label">Yes</label>
        </div>
        <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" asp-for="SecureYard" value="No" />
                <label class="form-check-label">No</label>
            </div>
            <span asp-validation-for="SecureYard" class="text-danger"></span>
        </div>
    </div>
    <!-- Step 3: Pet Experience -->
    <div class="wizard-step" data-step="2">
        <h5 class="fw-bold mb-3"><i class="bi bi-emoji-smile section-icon"></i>Pet Experience</h5>
    <div class="mb-3">
            <label class="form-label">Do you currently have pets?</label>
        <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" asp-for="CurrentlyHavePets" value="Yes" required />
                <label class="form-check-label">Yes</label>
        </div>
        <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" asp-for="CurrentlyHavePets" value="No" />
                <label class="form-check-label">No</label>
            </div>
            <span asp-validation-for="CurrentlyHavePets" class="text-danger"></span>
        </div>
        <div class="mb-3" id="currentPetsDetailsGroup" style="display:none;">
            <label class="form-label">If yes, list type(s), age(s), and breed(s):</label>
            <textarea class="form-control border-bottom border-2" style="border-radius:0;" name="CurrentPetsDetails" rows="2"></textarea>
    </div>
    <div class="mb-3">
            <label class="form-label">Have you owned pets before?</label>
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" asp-for="OwnedPetsBefore" value="Yes" required />
                <label class="form-check-label">Yes</label>
    </div>
        <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" asp-for="OwnedPetsBefore" value="No" />
                <label class="form-check-label">No</label>
            </div>
            <span asp-validation-for="OwnedPetsBefore" class="text-danger"></span>
        </div>
        <div class="mb-3">
            <label asp-for="PetCareWhenAway" class="form-label">Who will take care of the pet when you are away?</label>
            <input asp-for="PetCareWhenAway" class="form-control border-bottom border-2" style="border-radius:0;" required />
            <span asp-validation-for="PetCareWhenAway" class="text-danger"></span>
        </div>
    </div>
    <!-- Step 4: Adoption Commitment -->
    <div class="wizard-step" data-step="3">
        <h5 class="fw-bold mb-3"><i class="bi bi-emoji-smile section-icon"></i>Adoption Commitment</h5>
    <div class="mb-3">
            <label class="form-label">Are you financially prepared for pet care (vet, food, grooming)?</label>
        <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" asp-for="FinanciallyPrepared" value="Yes" required />
                <label class="form-check-label">Yes</label>
        </div>
        <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" asp-for="FinanciallyPrepared" value="No" />
                <label class="form-check-label">No</label>
            </div>
            <span asp-validation-for="FinanciallyPrepared" class="text-danger"></span>
    </div>
    <div class="mb-3">
            <label class="form-label">Are you willing to allow a home visit before/after adoption?</label>
        <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" asp-for="AllowHomeVisit" value="Yes" required />
                <label class="form-check-label">Yes</label>
        </div>
        <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" asp-for="AllowHomeVisit" value="No" />
                <label class="form-check-label">No</label>
            </div>
            <span asp-validation-for="AllowHomeVisit" class="text-danger"></span>
    </div>
    <div class="mb-3">
            <label class="form-label">Are you ready for a 10–15 year commitment for this pet?</label>
        <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" asp-for="LongTermCommitment" value="Yes" required />
                <label class="form-check-label">Yes</label>
        </div>
        <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" asp-for="LongTermCommitment" value="No" />
                <label class="form-check-label">No</label>
            </div>
            <span asp-validation-for="LongTermCommitment" class="text-danger"></span>
        </div>
    <div class="mb-2">
            <p class="small text-muted">
            I certify that the information I provided is true and complete to the best of my knowledge.<br />
            I understand that this application does not guarantee adoption.
        </p>
    </div>
    <div class="row mb-3">
        <div class="col-md-6">
                <label asp-for="Signature" class="form-label">Signature</label>
                <input asp-for="Signature" class="form-control border-bottom border-2" style="border-radius:0;" required />
                <span asp-validation-for="Signature" class="text-danger"></span>
        </div>
        <div class="col-md-3">
                <label asp-for="Date" class="form-label">Date</label>
                <input asp-for="Date" type="date" class="form-control border-bottom border-2" style="border-radius:0;" required />
                <span asp-validation-for="Date" class="text-danger"></span>
            </div>
        </div>
    </div>
    <!-- Step 5: Review & Submit -->
    <div class="wizard-step" data-step="4">
        <h5 class="fw-bold mb-3"><i class="bi bi-clipboard-check section-icon"></i>Review & Submit</h5>
        <div id="reviewSection" class="mb-4">
            <!-- Review summary will be filled by JS -->
        </div>
        <button type="submit" class="btn btn-pawfect w-100">Submit Application</button>
    </div>
    <div class="d-flex justify-content-between mt-4">
        <button type="button" class="btn btn-outline-secondary" id="backBtn" style="display:none;">Back</button>
        <button type="button" class="btn btn-pawfect" id="nextBtn">Next</button>
        <button type="submit" class="btn btn-warning ms-2" id="saveDraftBtn" name="saveDraft" value="true">Save for Later</button>
    </div>
</form>
</main>
<partial name="_ValidationScriptsPartial" />
    <script>
    // Wizard navigation logic
    let currentStep = 0;
    const steps = document.querySelectorAll('.wizard-step');
    const stepper = document.querySelectorAll('.step');
    const nextBtn = document.getElementById('nextBtn');
    const backBtn = document.getElementById('backBtn');
    const form = document.getElementById('wizardForm');
    const errorSummary = document.getElementById('wizardErrorSummary');
    function showStep(idx) {
        steps.forEach((s, i) => s.classList.toggle('active', i === idx));
        stepper.forEach((s, i) => {
            s.classList.toggle('active', i === idx);
            s.classList.toggle('completed', i < idx);
        });
        backBtn.style.display = idx === 0 ? 'none' : '';
        nextBtn.style.display = idx === steps.length - 1 ? 'none' : '';
        errorSummary.style.display = 'none';
    }
    function validateStep(idx) {
        // Advanced validation: highlight, shake, scroll, show summary
        const visibleFields = steps[idx].querySelectorAll('input, select, textarea');
        let valid = true;
        let firstInvalid = null;
        let errorList = [];
        visibleFields.forEach(f => {
            if (!f.checkValidity()) {
                valid = false;
                f.classList.add('is-invalid');
                if (!firstInvalid) firstInvalid = f;
                const label = form.querySelector('label[for="' + f.id + '"]')?.textContent || f.name;
                errorList.push(label + ' is required.');
            } else {
                f.classList.remove('is-invalid');
            }
        });
        if (!valid) {
            if (firstInvalid) firstInvalid.focus();
            errorSummary.innerHTML = errorList.map(e => `<div><i class='bi bi-exclamation-circle'></i> ${e}</div>`).join('');
            errorSummary.style.display = 'block';
        } else {
            errorSummary.style.display = 'none';
        }
        return valid;
    }
    nextBtn.addEventListener('click', function () {
        if (!validateStep(currentStep)) return;
        if (currentStep < steps.length - 1) {
            currentStep++;
            showStep(currentStep);
            if (currentStep === steps.length - 1) fillReview();
        }
    });
    backBtn.addEventListener('click', function () {
        if (currentStep > 0) {
            currentStep--;
            showStep(currentStep);
        }
    });
    function fillReview() {
        // Fill the review section with a summary of all fields
        const review = document.getElementById('reviewSection');
        review.innerHTML = '';
        const fields = [
            { label: 'Full Name', value: document.querySelector('input[name="ApplicantName"]').value },
            { label: 'Age', value: document.querySelector('input[name="Age"]').value },
            { label: 'Gender', value: document.querySelector('input[name="Gender"]:checked')?.value || '' },
            { label: 'Phone', value: document.querySelector('input[name="Phone"]').value },
            { label: 'Email', value: document.querySelector('input[name="Email"]').value },
            { label: 'Address', value: document.querySelector('input[name="Address"]').value },
            { label: 'Residence Type', value: document.querySelector('input[name="ResidenceType"]:checked')?.value || '' },
            { label: 'Own or Rent', value: document.querySelector('input[name="OwnOrRent"]:checked')?.value || '' },
            { label: 'Landlord Allows Pets', value: document.querySelector('input[name="LandlordAllowsPets"]:checked')?.value || '' },
            { label: 'Secure Yard', value: document.querySelector('input[name="SecureYard"]:checked')?.value || '' },
            { label: 'Currently Have Pets', value: document.querySelector('input[name="CurrentlyHavePets"]:checked')?.value || '' },
            { label: 'Current Pets Details', value: document.querySelector('textarea[name="CurrentPetsDetails"]').value },
            { label: 'Owned Pets Before', value: document.querySelector('input[name="OwnedPetsBefore"]:checked')?.value || '' },
            { label: 'Pet Care When Away', value: document.querySelector('input[name="PetCareWhenAway"]').value },
            { label: 'Financially Prepared', value: document.querySelector('input[name="FinanciallyPrepared"]:checked')?.value || '' },
            { label: 'Allow Home Visit', value: document.querySelector('input[name="AllowHomeVisit"]:checked')?.value || '' },
            { label: 'Long Term Commitment', value: document.querySelector('input[name="LongTermCommitment"]:checked')?.value || '' },
            { label: 'Signature', value: document.querySelector('input[name="Signature"]').value },
            { label: 'Date', value: document.querySelector('input[name="Date"]').value },
        ];
        fields.forEach(f => {
            review.innerHTML += `<div class='mb-2'><strong>${f.label}:</strong> ${f.value}</div>`;
        });
    }
    // Tooltips for labels
    document.querySelectorAll('.form-label[title]').forEach(label => {
        label.addEventListener('mouseenter', function () {
            const tip = document.createElement('div');
            tip.className = 'tooltip bs-tooltip-top';
            tip.innerHTML = `<div class='tooltip-arrow'></div><div class='tooltip-inner'>${label.title}</div>`;
            document.body.appendChild(tip);
            const rect = label.getBoundingClientRect();
            tip.style.position = 'absolute';
            tip.style.left = rect.left + 'px';
            tip.style.top = (rect.top - 36) + 'px';
        });
        label.addEventListener('mouseleave', function () {
            document.querySelectorAll('.tooltip').forEach(t => t.remove());
        });
    });
    // Conditional logic for landlord question
    function updateLandlordQuestion() {
        const ownOrRent = document.querySelector('input[name="OwnOrRent"]:checked');
        document.getElementById('landlordQuestion').style.display = (ownOrRent && ownOrRent.value === 'Rent') ? 'block' : 'none';
    }
    document.querySelectorAll('input[name="OwnOrRent"]').forEach(el => {
        el.addEventListener('change', updateLandlordQuestion);
    });
    updateLandlordQuestion();
    // Conditional logic for current pets details
    function updateCurrentPetsDetails() {
        const havePets = document.querySelector('input[name="CurrentlyHavePets"]:checked');
        document.getElementById('currentPetsDetailsGroup').style.display = (havePets && havePets.value === 'Yes') ? 'block' : 'none';
    }
    document.querySelectorAll('input[name="CurrentlyHavePets"]').forEach(el => {
        el.addEventListener('change', updateCurrentPetsDetails);
    });
    updateCurrentPetsDetails();
    // On page load, show first step
    showStep(currentStep);
    // Save for Later disables validation
    document.getElementById('saveDraftBtn').addEventListener('click', function (e) {
        // Remove required attributes for draft save
        form.querySelectorAll('[required]').forEach(f => f.removeAttribute('required'));
        // Optionally, set a hidden field or use the button's name/value
    });
    </script>